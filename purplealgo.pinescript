//
// Purple Algo. Created by @pxlmastr
// Changelog:
// v0.1: Basic implementation of the indicator, allowing users to create confluences in the market.
//      - Build 1: Basic implementation.
//      - Build 2: Added coloring.
//      - Build 3: Changed coloring for compatibility with TradingView's default theme colors, making the entire indicator look better.
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
//@version=6
indicator('Purple Algo (Build 3)', overlay = true)

/////////////////////////////////
// Candle Coloring (HullSuite) //
/////////////////////////////////

//INPUT
src = input(close, title = 'Source')
modeSwitch = input.string('Hma', title = 'Hull Variation', options = ['Hma', 'Thma', 'Ehma'])
length = input(55, title = 'Length(180-200 for floating S/R , 55 for swing entry)')
lengthMult = input(1.0, title = 'Length multiplier (Used to view higher timeframes with straight band)')

useHtf = input(false, title = 'Show Hull MA from X timeframe? (good for scalping)')
htf = input.timeframe('240', title = 'Higher timeframe')

switchColor = input(true, 'Color Hull according to trend?')
candleCol = input(true, title = 'Color candles based on Hull\'s Trend?')
visualSwitch = input(true, title = 'Show as a Band?')
thicknesSwitch = input(1, title = 'Line Thickness')
transpSwitch = input.int(40, title = 'Band Transparency', step = 5)

//FUNCTIONS
//HMA
HMA(_src, _length) =>
    ta.wma(2 * ta.wma(_src, _length / 2) - ta.wma(_src, _length), math.round(math.sqrt(_length)))
    //EHMA    
EHMA(_src, _length) =>
    ta.ema(2 * ta.ema(_src, _length / 2) - ta.ema(_src, _length), math.round(math.sqrt(_length)))
    //THMA    
THMA(_src, _length) =>
    ta.wma(ta.wma(_src, _length / 3) * 3 - ta.wma(_src, _length / 2) - ta.wma(_src, _length), _length)

//SWITCH
Mode(modeSwitch, src, len) =>
    modeSwitch == 'Hma' ? HMA(src, len) : modeSwitch == 'Ehma' ? EHMA(src, len) : modeSwitch == 'Thma' ? THMA(src, len / 2) : na

//OUT
_hull = Mode(modeSwitch, src, int(length * lengthMult))
HULL = useHtf ? request.security(syminfo.ticker, htf, _hull) : _hull
MHULL = HULL[0]
SHULL = HULL[2]

//COLOR
hullColor = switchColor ? HULL > HULL[2] ? #673ab7 : #f23645 : color.yellow

//PLOT
///< Frame
Fi1 = plot(MHULL, title = 'MHULL', color = hullColor, linewidth = math.max(1, thicknesSwitch), display = display.none)
Fi2 = plot(visualSwitch ? SHULL : na, title = 'SHULL', color = hullColor, linewidth = math.max(1, thicknesSwitch), display = display.none)
alertcondition(ta.crossover(MHULL, SHULL), title = 'Hull trending up.', message = 'Hull trending up.')
alertcondition(ta.crossover(SHULL, MHULL), title = 'Hull trending down.', message = 'Hull trending down.')
///< Ending Filler
fill(Fi1, Fi2, title = 'Band Filler', color = hullColor, display = display.none)
///BARCOLOR
barcolor(color = candleCol ? switchColor ? hullColor : na : na)



// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © pxlmastrxdalt

// color inputs
color1 = input(#673ab7, title = "Up Color")
color2 = input(#f23645, title = "Down Color")

ma1 = ta.sma(close, 31)
ma2 = ta.sma(close, 33)
ma3 = ta.sma(close, 35)
ma4 = ta.sma(close, 37)
ma5 = ta.sma(close, 39)
ma6 = ta.sma(close, 41)
ma7 = ta.sma(close, 43)
ma8 = ta.sma(close, 45)

ma1color = ma1 > close ? color2 : color1
ma2color = ma2 > close ? color2 : color1
ma3color = ma3 > close ? color2 : color1
ma4color = ma4 > close ? color2 : color1
ma5color = ma5 > close ? color2 : color1
ma6color = ma6 > close ? color2 : color1
ma7color = ma7 > close ? color2 : color1
ma8color = ma8 > close ? color2 : color1

displayopt = display.all - display.price_scale - display.status_line

plot(ta.sma(close, 31), title = "31 Moving Average", color = ma1color, display = displayopt, linewidth = 3)
plot(ta.sma(close, 33), title = "33 Moving Average", color = ma2color, display = displayopt)
plot(ta.sma(close, 35), title = "35 Moving Average", color = ma3color, display = displayopt)
plot(ta.sma(close, 37), title = "37 Moving Average", color = ma4color, display = displayopt)
plot(ta.sma(close, 39), title = "39 Moving Average", color = ma5color, display = displayopt)
plot(ta.sma(close, 41), title = "41 Moving Average", color = ma6color, display = displayopt)
plot(ta.sma(close, 43), title = "43 Moving Average", color = ma7color, display = displayopt)
plot(ta.sma(close, 45), title = "45 Moving Average", color = ma8color, display = displayopt, linewidth = 3)